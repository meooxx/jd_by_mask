// 年      月          日      时     分     秒     毫秒
// 2020,  0-11,     1-31,   0-24,  0-60  0-60   0-1000
// 如
// new Date(2020, 2, 4, 10, 0, 0, 400).getTime()
// 等于 2020-3-4 10:00:00.400

// 修改使用的时间
// **日期说明** 1-12月
// 0表示是一月, 11表示是12月
// 2020/1/1 10:00:00.400
const dd1 = new Date(2020, 0, 1, 10, 0, 0, 400).getTime();
// 2020/2/3 20:00:00.400
const dd2 = new Date(2020, 1, 3, 20, 0, 0, 400).getTime();
// 2020/12/3 21:00:00.400
const dd3 = new Date(2020, 11, 3, 21, 0, 0, 400).getTime();

// 修改这里, 添加skuId, 抢购时间 date, 强制使用秒杀流程 forceKO(已经不推荐使用, 程序自动会判断), areaId,
// 选填项 submitTimes, maxWaitingMS
// 需要更改 年/月/日 时:分:秒.毫秒
// skuId 获取方法， 打开任意一个商品详情页如 `https://item.jd.com/100011521400.html`, 则 `100011521400` 就是其skuId
exports.pool = [
	// 1 *现在必须设置areaId*
	//   如果上面 `config.js`中已经配置过了, 此处可以不用再配置`areaId`, areaId 获取在第 5 步骤说明
	// 2 forceKO: true/false (废弃不用)
	// 3 此脚本也可在非预约抢购流程中的秒杀(到时间变价那种)使用,为防止提交原价订单, 可配置提交订单重试次数 推荐 2-3 次(不明白的忽略)
	// 4 如果抢购过程中出现 `请求结算页面超过xxx ms`, 请增大maxWaitingMS, 建议1000-2000之间, 不设置默认 800
	{ skuId: '100011621642', date: dd1, areaId: `2_2825_51936` },
	// { skuId: '10022991959725', areaId: `2_2825_51936`, date: dd1, submitTimes: 3, maxWaitingMS: 1000 },
	// 不同时间的sku, 复制上述项修改值, 填写在下方

];
// 设置要强制扫码登录(没搞懂使用场景的忽略此配置)
// 说明: 因为 x 东, 24小时就要重新登录, 防止运行时登录状态有效
// 抢购执行时 cookie 过期了, 就尴尬了.
// true 强制扫码登录, 不使用当前已经存在本地的 cookie. 登录过后频繁重启时记得关闭
// 否则一直要扫码
exports.forceLogin = false;